{"remainingRequest":"/home/mixer/projects/annotate/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mixer/projects/annotate/src/components/Canvas.vue?vue&type=style&index=0&id=4336af88&scoped=true&lang=css&","dependencies":[{"path":"/home/mixer/projects/annotate/src/components/Canvas.vue","mtime":1560575905819},{"path":"/home/mixer/projects/annotate/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/mixer/projects/annotate/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/mixer/projects/annotate/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/mixer/projects/annotate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mixer/projects/annotate/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\naudio {\n\twidth: 100%;\n\tmargin-left: auto;\n\tmargin-right: auto;\n}\ncanvas {\n\theight: 100%;\n\tborder: 1px solid black;\n\tbackground-color: blue;\n\tdisplay: block;\n\tmargin-left: auto;\n\tmargin-right: auto;\n}\n.media-button {\n\tdisplay: inline-block;\n\tbackground: grey;\n\tcolor: white;\n\tfont-weight: bold;\n\tpadding: 2px;\n\tpadding-left: 10px;\n\tpadding-right: 10px;\n\ttext-align: center;\n\tcursor: pointer;\n}\n.boardContainer {\n\theight: calc(56.25vw - 15vw);\n\tmax-height: calc(100vh - 80px);\n}\n.scrubber {\n\theight: 5px;\n\tbackground-color: blue;\n}\n.progress {\n\tdisplay:block;\n\theight: 5px;\n\tbackground: red;\n}\n",{"version":3,"sources":["Canvas.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Canvas.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\t<div class=\"boardContainer\">\n\t\t<canvas ref=\"board\"></canvas>\n\n\t\t\t{{playback.progress}}\n\t\t<div class=\"scrubber\">\n\t\t\t<span class=\"progress\" v-bind:style=\"{ width: (playback.progress*100)+'%' }\"></span>\n\t\t</div>\n\t\t<div class=\"media-button\" @click=\"playToggle\">{{playing ? '| |' : 'â–º'}}</div>\n\n\t\t<div v-show=\"!recording && initialRecord\">\n\t\t\n\t\t\t<audio src=\"\" ref=\"recordedAudio\" controls class=\"slider\" v-show=\"!recording && initialRecord\"></audio>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport {AnnotationCanvas} from \"@/video/app.js\"\nexport default {\n\tname: 'annotation-canvas',\n\tdata() {\n\t\treturn {\n\t\t\tinitialRecord: false,\n\t\t\tplaying: true,\n\t\t\tplayback: {},\n\t\t\tprogress: 0.,\n\t\t\tcanvas: undefined\n\t\t}\n\t}, props: ['bus', 'recording'],\n\tmethods: {\n\t\tplayToggle: function () {\n\t\t\tthis.annotationLogic.playToggle()\n\t\t\tthis.playing = !this.playing\n\t\t}\n\t},\n\tmounted: function() {\n\t\tthis.context = this.$refs['board'].getContext('2d')\n\n\t\tthis.$refs['board'].width = 1920 //this.$refs['board'].parentElement.clientWidth //scale * 16;\n\t\tthis.$refs['board'].height = 1080 //this.$refs['board'].parentElement.clientHeight //scale * 9;\n\n\t\tthis.annotationLogic = new AnnotationCanvas(this.$refs['board'], this.$refs['recordedAudio'])\n\t\tthis.recording = this.annotationLogic.recorder.recording\n\t\tthis.playback = this.annotationLogic.playback\n\t\tsetInterval(function () {\n\t\t\tthis.playback = this.annotationLogic.playback\n\t\t}, 1000/40)\n\n\t\tthis.bus.$on('recToggle', () => { this.annotationLogic.recToggle(); this.initalRecord = true } )\n\t\tthis.bus.$on('micToggle', () => { this.annotationLogic.micToggle() } )\n\t\tthis.bus.$on('toolSelect', (tool) => { this.annotationLogic.toolSelect(tool) })\n\t\tthis.bus.$on('colourPick', (colour) => { this.annotationLogic.brushColour(colour) })\n\t\tthis.bus.$on('clearCanvas', () => { this.annotationLogic.clearCanvas() } )\n\t\tthis.bus.$on('brushWidth', (width) => { this.annotationLogic.brushWidth(width) })\n\t}\n}\n</script>\n<style scoped>\naudio {\n\twidth: 100%;\n\tmargin-left: auto;\n\tmargin-right: auto;\n}\ncanvas {\n\theight: 100%;\n\tborder: 1px solid black;\n\tbackground-color: blue;\n\tdisplay: block;\n\tmargin-left: auto;\n\tmargin-right: auto;\n}\n.media-button {\n\tdisplay: inline-block;\n\tbackground: grey;\n\tcolor: white;\n\tfont-weight: bold;\n\tpadding: 2px;\n\tpadding-left: 10px;\n\tpadding-right: 10px;\n\ttext-align: center;\n\tcursor: pointer;\n}\n.boardContainer {\n\theight: calc(56.25vw - 15vw);\n\tmax-height: calc(100vh - 80px);\n}\n.scrubber {\n\theight: 5px;\n\tbackground-color: blue;\n}\n.progress {\n\tdisplay:block;\n\theight: 5px;\n\tbackground: red;\n}\n</style>\n"]}]}